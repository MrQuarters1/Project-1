# Form implementation generated from reading ui file 'Account_gui.ui'
#
# Created by: PyQt6 UI code generator 6.6.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from logic import *

class Ui_MainWindow(object):
    def setupUi(self, MainWindow) -> None:
        """
        :param self: referenced object
        :param MainWindow: the Mainwindow object
        function that creates the window
        :return none:
        """
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.amount_linedit = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.amount_linedit.setGeometry(QtCore.QRect(330, 340, 150, 30))
        self.amount_linedit.setObjectName("amount_linedit")
        self.Account_change = QtWidgets.QPushButton(parent=self.centralwidget, clicked=lambda: self.account_change_click())
        self.Account_change.setEnabled(True)
        self.Account_change.setGeometry(QtCore.QRect(300, 510, 200, 30))
        self.Account_change.setObjectName("Account_change")
        self.error_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.error_label.setGeometry(QtCore.QRect(270, 240, 350, 30))
        self.error_label.setObjectName("error_label")
        self.deposit_button = QtWidgets.QPushButton(parent=self.centralwidget, clicked=lambda: self.deposit_click())
        self.deposit_button.setGeometry(QtCore.QRect(170, 290, 111, 30))
        self.deposit_button.setObjectName("deposit_button")
        self.withdraw_button = QtWidgets.QPushButton(parent=self.centralwidget, clicked=lambda: self.withdraw_click())
        self.withdraw_button.setGeometry(QtCore.QRect(520, 290, 111, 30))
        self.withdraw_button.setObjectName("withdraw_button")
        self.amount_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.amount_label.setGeometry(QtCore.QRect(270, 340, 71, 30))
        self.amount_label.setObjectName("amount_label")

        self.name_lineedit = QtWidgets.QLabel(parent=self.centralwidget)
        self.name_lineedit.setGeometry(QtCore.QRect(50, 100, 281, 61))
        self.name_lineedit.setObjectName("name_lineedit")
        self.name_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.name_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.name_label.setGeometry(QtCore.QRect(10, 30, 781, 61))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.name_label.setFont(font)
        self.name_label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.name_label.setObjectName("name_label")
        self.balance_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.balance_label.setGeometry(QtCore.QRect(4, 165, 791, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.balance_label.setFont(font)
        self.balance_label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.balance_label.setObjectName("balance_label")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow) -> None:
        """
        :param self: referenced object
        :param MainWindow: the main window object
        function that translates the pyqt code to work properly
        :return none:
        """
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", 'Bank App'))
        self.Account_change.setText(_translate("MainWindow", "View Savings Account"))
        self.deposit_button.setText(_translate("MainWindow", "Deposit"))
        self.withdraw_button.setText(_translate("MainWindow", "Withdraw"))
        self.amount_label.setText(_translate("MainWindow", "Amount: $"))
        self.name_label.setText(_translate("MainWindow", "Account"))
        self.balance_label.setText(_translate("MainWindow", "0.00"))
        self.error_label.setText(_translate("MainWindow", ""))

    def __init__(self) -> None:
        """
        :param self: referenced object
        function that initializes the class variables
        :return none:
        """
        self.saving_window = False
        self.saving_balance = 100
        self.balance = 0

    def withdraw_click(self) -> None:
        """
        :param self: referenced object
        function that is called when withdraw button is pushed. Takes away the amount from selected account's balance
        :return none:
        """
        if self.saving_window != True:
            try:
                amount_input = self.amount_linedit.text()
                balance = withdraw(self.balance, amount_input)
                self.balance_label.setText(f"{balance:.2f}")
                self.clear_text()
                self.error_label.setText("")
                self.store_balance()
            except TypeError:
                self.error_label.setText("Account balance must be 0 or greater")
            except ValueError:
                self.error_label.setText("Enter a number amount greater than 0 with no $ symbol")

        if self.saving_window == True:
            try:
                amount_input = self.amount_linedit.text()
                balance = saving_withdraw(self.saving_balance, amount_input)
                self.balance_label.setText(f"{balance:.2f}")
                self.clear_text()
                self.error_label.setText("")
                self.store_balance()
            except TypeError:
                self.error_label.setText("Saving Account balance must be 100 or greater")
            except ValueError:
                self.error_label.setText("Enter a number amount greater than 0 with no $ symbol")

    def deposit_click(self) -> None:
        """
        :param self: referenced object
        function that is called when deposit button is pushed. adds the amount input into the selected account's balance
        :return none:
        """
        if self.saving_window != True:
            try:
                amount_input = float(self.amount_linedit.text())
                balance = deposit(self.balance, amount_input)
                self.balance_label.setText(f"{balance:.2f}")
                self.clear_text()
                self.error_label.setText("")
                self.store_balance()
            except TypeError:
                self.error_label.setText("Enter a number amount greater than 0. - typeerror")
            except ValueError:
                self.error_label.setText("Enter a number amount with no $ symbol. - Valueerror")
        elif self.saving_window == True:
            try:
                amount_input = float(self.amount_linedit.text())
                balance = deposit(self.saving_balance, amount_input)
                self.balance_label.setText(f"{balance:.2f}")
                self.clear_text()
                self.error_label.setText("")
                self.store_balance()
            except TypeError:
                self.error_label.setText("Enter a number amount greater than 0. - typeerror")
            except ValueError:
                self.error_label.setText("Enter a number amount with no $ symbol. - Valueerror")

    def store_balance(self) -> None:
        """
        :param self: referenced object
        function that is used to store the balance value from savings account to regular account.
        :return none:
        """
        if self.saving_window != True:
            self.balance = float(self.balance_label.text())
        elif self.saving_window == True:
            self.saving_balance = float(self.balance_label.text())
    def account_change_click(self) -> None:
        """
        :param self: referenced object
        function that is called when change account button is clicked. Changes the account type from regular account to
        savings account and vice versa
        :return none:
        """
        if self.saving_window == False:
            self.store_balance()
            self.clear_text()
            self.error_label.setText('')
            self.balance_label.setText(f"{self.saving_balance:.2f}")
            self.name_label.setText('Savings Account')
            self.Account_change.setText('View Checking Account')
            self.saving_window = True
        elif self.saving_window == True:
            self.store_balance()
            self.clear_text()
            self.error_label.setText('')
            self.balance_label.setText(f"{self.balance:.2f}")
            self.name_label.setText('Account')
            self.Account_change.setText('View Savings Account')
            self.saving_window = False

    def clear_text(self) -> None:
        """
        :param self: referenced object
        function that clears the input text whenever a button is pressed
        :return none:
        """
        self.amount_linedit.setText('')


